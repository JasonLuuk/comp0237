[{'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 94, 'diff': None, 'Time': 63.276869773864746}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 90, 'diff': None, 'Time': 940.5300049781799}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 100, 'diff': None, 'Time': 61.50951910018921}, {'BestPatch': "LineInsertion({'target': ('lis.py', 12), 'ingredient': ('lis.py', 10), 'direction': 'before'})", 'Success': True, 'FitnessEval': 4, 'InvalidPatch': 2, 'diff': '*** before: lis.py\n--- after: lis.py\n***************\n*** 10,15 ****\n--- 10,16 ----\n  \n          if length == longest or val < arr[ends[length + 1]]:\n              ends[length + 1] = i\n+         if length == longest or val < arr[ends[length + 1]]:\n              longest = length + 1\n  \n      return longest\n', 'Time': 1.1640729904174805, 'BestFitness': 0}, {'BestPatch': "LineInsertion({'target': ('lis.py', 12), 'ingredient': ('lis.py', 10), 'direction': 'before'})", 'Success': True, 'FitnessEval': 2, 'InvalidPatch': 0, 'diff': '*** before: lis.py\n--- after: lis.py\n***************\n*** 10,15 ****\n--- 10,16 ----\n  \n          if length == longest or val < arr[ends[length + 1]]:\n              ends[length + 1] = i\n+         if length == longest or val < arr[ends[length + 1]]:\n              longest = length + 1\n  \n      return longest\n', 'Time': 0.4963841438293457, 'BestFitness': 0}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 92, 'diff': None, 'Time': 56.041810035705566}, {'BestPatch': "LineInsertion({'target': ('lis.py', 12), 'ingredient': ('lis.py', 10), 'direction': 'before'})", 'Success': True, 'FitnessEval': 80, 'InvalidPatch': 33, 'diff': '*** before: lis.py\n--- after: lis.py\n***************\n*** 10,15 ****\n--- 10,16 ----\n  \n          if length == longest or val < arr[ends[length + 1]]:\n              ends[length + 1] = i\n+         if length == longest or val < arr[ends[length + 1]]:\n              longest = length + 1\n  \n      return longest\n', 'Time': 21.344897031784058, 'BestFitness': 0}, {'BestPatch': "LineInsertion({'target': ('lis.py', 11), 'ingredient': ('lis.py', 10), 'direction': 'after'})", 'Success': True, 'FitnessEval': 184, 'InvalidPatch': 78, 'diff': '*** before: lis.py\n--- after: lis.py\n***************\n*** 10,15 ****\n--- 10,16 ----\n  \n          if length == longest or val < arr[ends[length + 1]]:\n              ends[length + 1] = i\n+         if length == longest or val < arr[ends[length + 1]]:\n              longest = length + 1\n  \n      return longest\n', 'Time': 50.348875999450684, 'BestFitness': 0}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 93, 'diff': None, 'Time': 52.38341498374939}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 93, 'diff': None, 'Time': 55.14503288269043}, {'BestPatch': "LineInsertion({'target': ('lis.py', 12), 'ingredient': ('lis.py', 10), 'direction': 'before'})", 'Success': True, 'FitnessEval': 63, 'InvalidPatch': 24, 'diff': '*** before: lis.py\n--- after: lis.py\n***************\n*** 10,15 ****\n--- 10,16 ----\n  \n          if length == longest or val < arr[ends[length + 1]]:\n              ends[length + 1] = i\n+         if length == longest or val < arr[ends[length + 1]]:\n              longest = length + 1\n  \n      return longest\n', 'Time': 15.602307796478271, 'BestFitness': 0}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 85, 'diff': None, 'Time': 49.81741285324097}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 91, 'diff': None, 'Time': 51.92748689651489}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 87, 'diff': None, 'Time': 52.17331290245056}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 87, 'diff': None, 'Time': 54.02761697769165}, {'BestPatch': "LineInsertion({'target': ('lis.py', 12), 'ingredient': ('lis.py', 10), 'direction': 'before'})", 'Success': True, 'FitnessEval': 154, 'InvalidPatch': 58, 'diff': '*** before: lis.py\n--- after: lis.py\n***************\n*** 10,15 ****\n--- 10,16 ----\n  \n          if length == longest or val < arr[ends[length + 1]]:\n              ends[length + 1] = i\n+         if length == longest or val < arr[ends[length + 1]]:\n              longest = length + 1\n  \n      return longest\n', 'Time': 40.89846897125244, 'BestFitness': 0}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 85, 'diff': None, 'Time': 55.40849280357361}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 85, 'diff': None, 'Time': 52.37684893608093}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 82, 'diff': None, 'Time': 53.149428844451904}, {'BestPatch': None, 'Success': False, 'FitnessEval': 200, 'InvalidPatch': 80, 'diff': None, 'Time': 60.04629397392273}]